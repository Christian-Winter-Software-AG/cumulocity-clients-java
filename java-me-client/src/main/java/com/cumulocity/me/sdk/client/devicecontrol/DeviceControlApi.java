/*
 * Copyright 2012 Nokia Siemens Networks 
 */
package com.cumulocity.me.sdk.client.devicecontrol;

import com.cumulocity.me.model.idtype.GId;
import com.cumulocity.me.rest.representation.operation.OperationRepresentation;
import com.cumulocity.me.sdk.SDKException;
import com.cumulocity.me.sdk.client.page.PagedCollectionResource;

public interface DeviceControlApi {

    /**
     * Gets operation by id
     *
     * @param gid id of the operation to search for
     * @return the operation with the given id
     * @throws SDKException if the operation is not found or if the query failed
     */
    OperationRepresentation getOperation(GId gid) throws SDKException;

    /**
     * Creates operation in the platform. The id of the operation must not be set, since it will be generated by the platform
     *
     * @param operation operation to be created
     * @return the created operation with the generated id
     * @throws SDKException if the operation could not be created
     */
    OperationRepresentation create(OperationRepresentation operation) throws SDKException;

    /**
     * Updates operation in the platform.
     * The operation to be updated is identified by the id within the given operation.
     *
     * @param operation to be updated
     * @return the updated operation
     * @throws SDKException if the operation could not be updated
     */
    OperationRepresentation update(OperationRepresentation operation) throws SDKException;

    /**
     * Gets the all the operation in the platform
     *
     * @return collection of operations with paging functionality
     * @throws SDKException if the query failed
     */
    PagedCollectionResource getOperations() throws SDKException;

    /**
     * Gets the operations from the platform based on specified filter. Queris based on [{@code status}, {@code deviceId}, {@code agentId}]
     * and [{@code deviceId}, {@code agentId}] are not supported.
     * currently not supported.
     *
     * @param filter the filter criteria(s)
     * @return collection of operations matched by the filter with paging functionality
     * @throws SDKException             if the query failed
     * @throws IllegalArgumentException in case of queries based on [{@code status}, {@code deviceId}, {@code agentId}] or [{@code
     *                                  deviceId}, {@code agentId}]
     */
    PagedCollectionResource getOperationsByFilter(OperationFilter filter) throws SDKException;
}
