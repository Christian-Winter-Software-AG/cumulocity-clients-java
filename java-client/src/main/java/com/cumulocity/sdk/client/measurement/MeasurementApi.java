/*
 * Copyright 2012 Nokia Siemens Networks 
 */
package com.cumulocity.sdk.client.measurement;

import com.cumulocity.model.idtype.GId;
import com.cumulocity.rest.representation.measurement.MeasurementCollectionRepresentation;
import com.cumulocity.rest.representation.measurement.MeasurementRepresentation;
import com.cumulocity.sdk.client.PagedCollectionResource;
import com.cumulocity.sdk.client.SDKException;

/**
 * API for creating, deleting and retrieving measurements from the platform.
 */
public interface MeasurementApi {

    /**
     * Gets measurement by id
     *
     * @param gid id of the measurement to search for
     * @return the measurement with the given id
     * @throws SDKException if the measurement is not found or if the query failed
     */
    MeasurementRepresentation getMeasurement(GId gid) throws SDKException;

    /**
     * Creates measurement in the platform. The id of the measurement must not be set, since it will be generated by the platform
     *
     * @param measurement measurement to be created
     * @return the created measurement with the generated id
     * @throws SDKException if the measurement could not be created
     */
    MeasurementRepresentation create(MeasurementRepresentation measurement) throws SDKException;

    /**
     * Deletes measurement from the platform.
     * The measurement to be deleted is identified by the id within the given measurement.
     *
     * @param measurement to be deleted
     * @throws SDKException if the measurement could not be deleted
     */
    void deleteMeasurement(MeasurementRepresentation measurement) throws SDKException;

    /**
     * Gets the all the measurement in the platform
     *
     * @return collection of measurements with paging functionality
     * @throws SDKException if the query failed
     */
    PagedCollectionResource<MeasurementCollectionRepresentation> getMeasurements() throws SDKException;

    /**
     * Gets the measurements from the platform based on specified filter
     *
     * @param filter the filter criteria(s)
     * @return collection of measurements matched by the filter with paging functionality
     * @throws SDKException if the query failed
     */
    PagedCollectionResource<MeasurementCollectionRepresentation> getMeasurementsByFilter(MeasurementFilter filter) throws SDKException;
}
