/*
 * Copyright 2012 Nokia Siemens Networks 
 */
package com.cumulocity.sdk.client.inventory;

import java.util.List;

import com.cumulocity.model.idtype.GId;
import com.cumulocity.rest.representation.inventory.ManagedObjectCollectionRepresentation;
import com.cumulocity.rest.representation.inventory.ManagedObjectRepresentation;
import com.cumulocity.sdk.client.PagedCollectionResource;
import com.cumulocity.sdk.client.SDKException;

/**
 * API for creating, and retrieving managed objects resources from the platform. Delete and update functionality is implemented on the
 * returned managed object.
 */
public interface InventoryApi {

    /**
     * Gets managed object resource by id. To get the managed object representation you have to call {@code get()} on the returned resource.
     *
     * @param gid id of the managed object to search for
     * @return the managed object resource associated with the given id
     * @throws SDKException if the query failed
     */
    ManagedObject getManagedObject(GId gid) throws SDKException;

    /**
     * Creates managed object in the platform. The id of the managed object must not be set, since it will be generated by the platform
     *
     * @param managedObject the managed object to be created
     * @return the created managed object with the generated id
     * @throws SDKException if the managed object could not be created
     */
    ManagedObjectRepresentation create(ManagedObjectRepresentation managedObject) throws SDKException;

    /**
     * Gets the all the managed object in the platform
     *
     * @return collection of managed objects with paging functionality
     * @throws SDKException if the query failed
     */
    PagedCollectionResource<ManagedObjectCollectionRepresentation> getManagedObjects() throws SDKException;

    /**
     * Gets the managed objects from the platform based on specified filter. Query based on {@code type} and {@code fragmentType} is
     * not supported.
     *
     * @param filter the filter criteria(s)
     * @return collection of managed objects matched by the filter with paging functionality
     * @throws SDKException             if the query failed
     * @throws IllegalArgumentException if both {@code type} and {@code fragmentType} are specified in the filter
     */
    PagedCollectionResource<ManagedObjectCollectionRepresentation> getManagedObjectsByFilter(InventoryFilter filter) throws SDKException;

    /**
     * Gets the managed objects from the platform based on the given ids
     *
     * @param ids the list of ids of the managed objects to search for
     * @return collection of managed objects matched in order of the given ids
     * @throws SDKException if the query failed
     */
    PagedCollectionResource<ManagedObjectCollectionRepresentation> getManagedObjectsByListOfIds(List<GId> ids) throws SDKException;
}
