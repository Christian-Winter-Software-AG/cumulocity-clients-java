name: Extract secrets at the repo level and push them to target repo

on:
  workflow_dispatch:

jobs:
  list-secrets:
   runs-on: [c8y-cicd-stag]
   outputs:
      repo_secrets: ${{ steps.list-secrets.outputs.secrets }}
      environment_matrix: ${{ steps.list-environment-secrets.outputs.matrix }}
   steps:
    - name: Install GitHub cli
      run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

    - name: list secrets from repo
      id: list-secrets
      env:
          GH_HOST: github.softwareag.com
          GITHUB_ENTERPRISE_TOKEN: ${{ secrets.C8Y_PREM_GHES_TOKEN }}
      run: |
        repo_secret=$(gh secret list --repo $GITHUB_REPOSITORY --json name --jq '[.[].name]')
        echo "$repo_secret"
        echo "secrets=$repo_secret" >> "$GITHUB_OUTPUT"

    - name: list environments of repo
      id: list-environment-secrets
      env:
          GH_HOST: github.softwareag.com
          GITHUB_ENTERPRISE_TOKEN: ${{ secrets.C8Y_PREM_GHES_TOKEN }}
      run: |
        gh api --method GET -H "Accept: application/vnd.github+json" repos/$GITHUB_REPOSITORY/environments --jq '[.environments[].name]' > environments.json
        jq -n '{include: []}' > include.json
        jq -c '.[]' environments.json | while read i; do
          echo "$i"

          gh secret list --repo $GITHUB_REPOSITORY --json name --jq '[.[].name]' -e "$(echo "$i" | xargs)" > secretsOfEnvironment.json
          jq -c '.[]' secretsOfEnvironment.json | while read e; do
            cat include.json | jq --arg name "$(echo "$i" | xargs)" --arg secretName "$(echo "$e" | xargs)" '.include += [{"name": $name, "secret_name": $secretName }]' > include-new.json
            mv include-new.json include.json
          done
        done

        cat include.json
        echo "matrix=$(cat include.json | jq -c)" >> "$GITHUB_OUTPUT"

  copy-secret:
    needs: list-secrets
    runs-on: [c8y-cicd-stag]
    continue-on-error: true
    timeout-minutes: 360
    strategy:
      max-parallel: 4
      matrix:
        secret_name: ${{ fromJSON(needs.list-secrets.outputs.repo_secrets) }}
    steps:
    - name: Install GitHub cli
      run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

    - name: Set ENV variables
      run: |
        echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

    - name: update target repo with secrets
      id: update-secrets
      env:
         GH_HOST: github.com
         GITHUB_TOKEN: ${{ secrets.C8Y_PREM_GHEC_TOKEN }}
         SECERET_VALUE: ${{ secrets[matrix.secret_name] }}
      run: |
          echo "$REPO_NAME"
          echo "${{ matrix.secret_name }}: ${SECERET_VALUE}"
          gh secret set --repo Cumulocity-IoT/$REPO_NAME ${{ matrix.secret_name }} -b "$SECERET_VALUE"

  copy-environment-secrets:
    needs: list-secrets
    runs-on: [c8y-cicd-stag]
    continue-on-error: true
    timeout-minutes: 360
    strategy:
      max-parallel: 4
      matrix: ${{ fromJSON(needs.list-secrets.outputs.environment_matrix) }}
    environment:
      name: ${{ matrix.name }}
    steps:
    - name: Install GitHub cli
      run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

    - name: Set ENV variables
      run: |
        echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

    - name: update target repo with secrets
      id: update-secrets
      env:
         GH_HOST: github.com
         GITHUB_TOKEN: ${{ secrets.C8Y_PREM_GHEC_TOKEN }}
         SECERET_VALUE: ${{ secrets[matrix.secret_name] }}
      run: |
          echo "$REPO_NAME"
          echo "${{ matrix.secret_name }}: ${SECERET_VALUE}"
          gh secret set --repo Cumulocity-IoT/$REPO_NAME ${{ matrix.secret_name }} -b "$SECERET_VALUE"